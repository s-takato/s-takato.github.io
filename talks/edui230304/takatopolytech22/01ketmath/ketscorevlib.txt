//   220728 Quesno, pos of Text1
//   211112
//   211020
//   210923
//   210619
//   210910

Shift=0;
keytype=1;
capflg=0;
greflg=0;
boldflg=0;
vecflg=0;

nch=2;
ch=2;
Str="";
Strp="";
Strnq="";
Strnow="";
Strt="";
npos=0;

//nt=4;
px=15;
dtpy=3.2;
tposL=apply(1..4,[px+0.5,17.4-(#-1)*dtpy]);
posyL=[23,-2.5,-34];

//Setwindow([-20,65],[-17,15]);

//nameL=Keyname();
//Keytable(0,dxL,4,32.5,poskey,[1,1,0],nameL,[0,-0.5],22);

//Keytable(5,43,1,34.5,[46,3.4],0.9*[1,1,1],[],[0,-0.5],20);
//actL1=["BS","CL","AC","PS","PL"];
//forall(1..5,drawtext([47+(#-1)*4.3,4.2],actL1_#,size->20));
//Keytable(2,27,1,30,[46,0],0.9*[1,1,1]);
//actL2=["$<\!<$","$<$"];
//forall(1..2,drawtext([46.1+(#-1)*3,1],actL2_#,size->20));
//Keytable(2,27,1,30,[62,0],0.9*[1,1,1],[],[0,-0.5],20);
//actL3=["$>$","$>\!>$"];
//forall(1..2,drawtext([62.5+(#-1)*2.5,1],actL3_#,size->20));

poskey=[19.5,-17.67];
dxL=apply(10..19,35.5);
dxL_4=42; dxL_5=42;
dxL2=apply(1..9,35.5);
dxL3=[42,42];

 // no ketjs on 
Seteditable(1,["","Size=24","Width=500"]);
Seteditable(2,["","Size=24","Width=500"]);
Seteditable(3,["","Size=24","Width=500"]);
Seteditable(10,["Pg=","Size=18","Width=65"]);
Seteditable(32,["St=","Size=18","Width=65"]);
Text1.xy=[px+8,posyL_1-1];
Text2.xy=[px+1,posyL_2-1];
Text3.xy=[px+1,posyL_3-1];
inspect(T1,"ptsize",6);
inspect(T2,"ptsize",6);
inspect(T3,"ptsize",6);
inspect(T4,"ptsize",6);
// no ketjs off


Keyname():=(
  regional(nL,nL2,nL3,tmp1);
  nL=[
    ["a","b","c","sin","sq",")","7","8","9","＋"],
    ["x","y","z","cos","fr",",","4","5","6","ー"],
    ["r","s","t","tan","tfr","(","1","2","3","＊","'"],
    ["w","_","=","log","ln","^","0",".","sp","／"]
  ];
  nL2=[
    ["°","＠","[","]","|","d","e","f","g"],
    ["$\times$","!","{","}","$\neq$","h","i","j","k"],
    ["dot",":",";","$\leq$","$\geq","l","m","n","o"],
    ["\","$\pm$","$\mp$","<",">","p","q","u","v"]
  ];
  nL3=[
    ["lim","pi"],
    ["int","$\infty$"],
    ["'","cas"],
    ["sum","txt"]
  ];

  if(Shift==1,
    nL3_3_2="$d$"; nL3_4_1="$[.]_{}^{}$"; nL3_4_2="$\partial$"; //210923
  );
  if(Shift==2,
    nL3_1_1="mat"; nL3_2_1="det"; nL3_4_2="$\circ$"; //210923
  );
  if(keytype==2,
    tmp1=["A","B","C"]; forall(1..3,nL_1_(#)=tmp1_#);
    tmp1=["D","E","F","G"]; forall(1..4,nL2_1_(#+5)=tmp1_#);
    tmp1=["X","Y","Z"]; forall(1..3,nL_2_(#)=tmp1_#);
    tmp1=["H","I","J","K"]; forall(1..4,nL2_2_(#+5)=tmp1_#);
    tmp1=["R","S","T"]; forall(1..3,nL_3_(#)=tmp1_#);
    tmp1=["L","M","N","O"]; forall(1..4,nL2_3_(#+5)=tmp1_#);
    tmp1=["W"]; forall(1..1,nL_4_(#)=tmp1_#);
    tmp1=["P","Q","U","V"]; forall(1..4,nL2_4_(#+5)=tmp1_#);
  );
  if(keytype==3,
    tmp1=["$\alpha$","$\beta$","$\gamma$"];
    forall(1..3,nL_1_(#)=tmp1_#);
    tmp1=["$\Delta$","$\delta$","$\varepsilon$","$\varphi$"];
    forall(1..4,nL2_1_(#+5)=tmp1_#);
    tmp1=["$\kappa$","$\iota$","$\zeta$"];
    forall(1..3,nL_2_(#)=tmp1_#);
    tmp1=["$\Theta$","$\theta$","$\chi$","$\xi$"];
    forall(1..4,nL2_2_(#+5)=tmp1_#);
    tmp1=["$\rho$","$\sigma$","$\tau$"];
    forall(1..3,nL_3_(#)=tmp1_#);
    tmp1=["$\lambda","$\mu$","$\nu$","$\omega$"];
    forall(1..4,nL2_3_(#+5)=tmp1_#);
    tmp1=["$\Omega$"];
    forall(1..1,nL_4_(#)=tmp1_#);
    tmp1=["$\Psi$","$\psi$","$\Phi$","$\Lambda$"];
    forall(1..4,nL2_4_(#+5)=tmp1_#);
  );
  if(keytype==4,
    tmp1=apply(["a","b","c"],"$\mathbf{"+#+"}$");
    forall(1..3,nL_1_(#)=tmp1_#);
    tmp1=apply(["d","e","f","g"],"$\mathbf{"+#+"}$");
    forall(1..4,nL2_1_(#+5)=tmp1_(#));
    tmp1=apply(["x","y","z"],"$\mathbf{"+#+"}$");
    forall(1..3,nL_2_(#)=tmp1_#);
    tmp1=apply(["h","i","j","k"],"$\mathbf{"+#+"}$");
    forall(1..4,nL2_2_(#+5)=tmp1_#);
    tmp1=apply(["r","s","t"],"$\mathbf{"+#+"}$");
    forall(1..3,nL_3_(#)=tmp1_#);
    tmp1=apply(["l","m","n","o"],"$\mathbf{"+#+"}$");
    forall(1..4,nL2_3_(#+5)=tmp1_#);
    tmp1=apply(["w"],"$\mathbf{"+#+"}$");
    forall(1..1,nL_4_(#)=tmp1_#);
    tmp1=apply(["p","q","r","s"],"$\mathbf{"+#+"}$");
    forall(1..4,nL2_4_(#+5)=tmp1_#);
  );
  if(keytype==5,
    tmp1=apply(["a","b","c"],"$\vec{"+#+"}$");
    forall(1..3,nL_1_(#)=tmp1_#);
    tmp1=apply(["d","e","f","g"],"$\vec{"+#+"}$");
    forall(1..4,nL2_1_(#+5)=tmp1_(#));
    tmp1=apply(["x","y","z"],"$\vec{"+#+"}$");
    forall(1..3,nL_2_(#)=tmp1_#);
    tmp1=apply(["h","i","j","k"],"$\vec{"+#+"}$");
    forall(1..4,nL2_2_(#+5)=tmp1_#);
    tmp1=apply(["r","s","t"],"$\vec{"+#+"}$");
    forall(1..3,nL_3_(#)=tmp1_#);
    tmp1=apply(["l","m","n","o"],"$\vec{"+#+"}$");
    forall(1..4,nL2_3_(#+5)=tmp1_#);
    tmp1=apply(["w"],"$\vec{"+#+"}$");
    forall(1..1,nL_4_(#)=tmp1_#);
    tmp1=apply(["p","q","r","s"],"$\vec{"+#+"}$");
    forall(1..4,nL2_4_(#+5)=tmp1_#);
  );  [nL,nL2,nL3];
);

Manifun=["Allclear()","Clear()","Delete()","Push()","Pull()",
  "Left()","Right()","LLeft()","RRight()","Fullmark()"];

// only for ketscore
Fullmark():=(
  //global Score
  Score=mrkL_nqu;
);

Delete():=(
  regional(tmp1,tmp2,strnow);
  //global Score,npos
  if(npos>0,
    Score=substring(Score,0,npos-1)+substring(Score,npos,length(Score));
    npos=npos-1;
  );
);


Allclear():=(
  Score="";
  StrpL_ch="";
  npos=0;
);

Clear():=( 
  Score="";
  npos=0;
);

Push():=(
  regional(tmp,tmp1);
  tmp1=Score;
  tmp=indexof(tmp1,"//");
  if(tmp==0,
    StrpL_ch=StrpL_ch+tmp1+"//";
    Score="";
    npos=0;
  ,
    StrpL_ch=StrpL_ch+substring(tmp1,0,tmp+1);
    Score=substring(tmp1,tmp+1,length(tmp1));
    npos=max([0,npos-(tmp+1)]);
  );
);

Pull():=(
  regional(tmp,tmp1,tmp2);
  Score=Score+StrpL_ch;
  npos=length(StrpL_ch)+npos;
);

Left():=(
  regional(tmp,tmp1,tmp2,tmp3);
  //global Score,npos
  if(length(Score)>0,
    tmp=indexof(Score,"?");
    if(tmp>1,
      tmp1=substring(Score,0,tmp-2)+"?";
      tmp2=substring(Score,tmp-2,tmp-1);
      tmp3=substring(Score,tmp,length(Str));
      Score=tmp1+tmp2+tmp3;
      npos=length(tmp1+"?");
    );
    if(tmp==0,
      tmp1=substring(Score,0,length(Str)-1)+"?";
      tmp3=substring(Score,length(Str)-1,length(Str));
      Score=tmp1+tmp3;  
      npos=length(tmp1);
    );
  );
);

Right():=(
  regional(tmp,tmp1,tmp2,tmp3);
  //global Score,npos
  if(length(Score)>0,
    tmp=indexof(Score,"?");
    if(tmp>0,
      if(tmp<length(Score)-1,
        tmp1=substring(Score,0,tmp-1);
        tmp2=substring(Score,tmp,tmp+1)+"?";
        tmp3=substring(Score,tmp+1,length(Score));
        Score=tmp1+tmp2+tmp3;
        npos=length(tmp1+"?");
      );
      if(tmp==length(Score)-1,
        tmp1=substring(Score,0,tmp-1);
        tmp3=substring(Score,tmp,length(Score));
        Score=tmp1+tmp3;
        npos=length(Score);
      );
    );
  );
);

LLeft():=(
  regional(tmp,tmp1,tmp2,tmp3);
  //global Score,npos
  Score=replace(Score,"?","");
  npos=1;
  Score="?"+Score;
);

RRight():=(
  regional(tmp,tmp1,tmp2,tmp3);
  //global Str,npos
  Score=replace(Score,"?","");
  npos=length(Score);
);

// for scriptadd   //220423
//  changed  220506

scriptaddstart=1; 

Setadjust():=Setadjust([0,0],1);
Setadjust(mv,sc):=(
  //help:mv=vSW moving , sc=scale changing
  //global pSW,Scalea,Movea
  Scalea=3.6*sc;
  pSW=[50,3]+mv; 
  Movea=pSW-SW.xy;
);

Adjustpt(pt):=(
  regional(x0,y0,x1,y1);
  //global Scalea,Movea
  x1=pt_1; y1=pt_2;
  x0=SW.x; y0=SW.y;
  x1=x0+Scalea*(x1-x0);
  y1=y0+Scalea*(y1-y0);
  x1=x1+Movea_1;
  y1=y1+Movea_2;
  [x1,y1];
);

Adjust(gd):=(
  regional(dL,depth,out,tmp);
  if(isstring(gd),dL=parse(gd),dL=gd);
  depth=Measuredepth(dL);
  if(depth==0,out=Adjustpt(dL));
  if(depth==1,
    out=apply(dL,Adjustpt(#));
  );
  if(depth==2,
    out=[];
    forall(dL,
      out=append(out,Adjust(#));
    );
  );
  out;
);

pdrwxy():=pdrwxy(["","x","e1","y","n1","O","s1w1"],[]);
pdrwxy(axLorg,op):=(
  regional(axL);
  if(length(axLorg)==0,
    axL=["","x","e1","y","n1","O","s1w1"];
  , 
    axL=axLorg; 
  ); 
  Listplot("axx",Adjust([[XMIN,0],[XMAX,0]]));
  Listplot("axy",Adjust([[0,YMIN],[0,YMAX]]));
  Expr(Adjust([XMAX,0]),axL_3,axL_2,op);
  Expr(Adjust([0,YMAX]),axL_5,axL_4,op);
  Letter(Adjust([0,0]),axL_7,axL_6,op);
);

pletter(Pt,Dr,St):=pletter([Pt,Dr,St]);
pletter(list):=pletter(list,[]);
pletter(Pt,Dr,St,options):=pletter([Pt,Dr,St],options);
pletter(list,options):=(
  regional(L,tmp);
  L=[];
  forall(1..(length(list)),
     if(mod(#,3)==1,tmp=Adjust(list_#),tmp=list_#);
     L=append(L,tmp);
  );    
  Letter(L,options);
);

plistplot(nm,vptL):=plistplot(nm,vptL,[]); //220605
plistplot(nm,vptL,op):=( //220529
  regional(ptL,tmp,tmp1);
  Listplot("v"+nm,vptL,["nodisp"]);
  tmp=Adjust("sgv"+nm);
  Listplot(nm,tmp,op);
);

pplotdata(name1,func,variable):=pplotdata(name1,func,variable,[]);
pplotdata(name1,func,variable,options):=( //220529
  regional(tmp,tmp1);
  tmp=prepend("nodisp",options);
  Plotdata("v"+name1,func,variable,["nodisp"]);
  tmp=Adjust("grv"+name1);
  Listplot("-gr"+name1,tmp,options);
);

Quesno():=Quesno(nqu,1); //220816
Quesno(nq,flg):=( //220816
  regional(tmp,tmp1,out);
  out="";
  tmp=select(1..nq,substring(quL_#_1,0,1)=="Q");
  if(length(tmp)>0,
    tmp1=tmp_(-1);
    out=quL_tmp1;
    if(islist(out),out=out_1); /////
    tmp=indexof(out," ");
    if(tmp>0,out=substring(out,0,tmp-1));
    if(flg>0, //220816from
      out=out+"-"+text(nq-tmp1+1);
    );
  ); //220816to
  out;
);
