Modifyfortex(str):=(
  regional(rep1L,rep2L,nn,tmp,tmp1,out);
  rep1L=["(sp)","(cross)","(cdot)","(deg)","(circ)","(neq)",
         "(geq)","(leq)","(pm)","(mp)","(inf)"];
  rep2L=["\;","{\times}","{\cdot}","^{\circ}","\circ","{\neq}",
         "{\geq}","{\leq}","{\pm}","{\mp}","{\infty}"];
  out=str;
  forall(1..(length(rep1L)),nn,
    out=replace(out,rep1L_nn,rep2L_nn);
  );
  out;
);

Extractvar(strorg):=Extractvar(strorg,",");
Extractvar(strorg,mark):=(
  regional(out,parL,str,cma,nc,first,last,
     tmp,tmp1,tmp2);
  str=strorg;
  out=[];
  first=0; last=0;
  parL=Bracket(str,"()");
  tmp1=select(parL,#_2==1);
  tmp2=select(parL,#_2==-1);
  if(length(tmp1)*length(tmp2)>0,
    first=tmp1_1_1;
    last=tmp2_1_1;
    str=substring(str,0,last);
    cma=Indexall(str,mark);
    parL=select(parL,#_1<=last);
    if(length(cma)==0,
      out=[substring(str,first,last-1)];
    ,
      tmp1=first;
      forall(1..(length(cma)),nc,
        tmp=select(parL,#_1<cma_nc);
        tmp=tmp_(-1)_2;
        if(tmp>0,tmp=tmp,tmp=-tmp-1);
        if(tmp==1,
          tmp2=cma_(nc)-1;
          out=append(out,substring(str,tmp1,tmp2));
          tmp1=tmp2+1;
          if(nc==length(cma),
            out=append(out,substring(str,tmp1,length(str)-1));
          );
        );
      );
    );
  );
  [first,last,out];
);

Replacematdet(str):=(
  regional(sym,out,rest,ctr,eL,np,nc,tmp,tmp1,tmp2,tmp3);
  out=str;
  forall(["mat(","det(","case("],sym,  //210902 case
    tmp=indexof(out,sym);
    ctr=0;
    while((tmp>0)&(ctr<20),
      rest=substring(out,tmp-1,length(out));
      out=substring(out,0,tmp-1);
      tmp1=Bracket(rest,"()");
      tmp1=select(tmp1,#_2==-1);
      if(length(tmp1)>0,tmp1=tmp1_1_1,tmp1=length(rest));
      tmp2=substring(rest,0,tmp1);
      rest=substring(rest,tmp1,length(rest));
      eL=Extractvar(tmp2,";");
      tmp3=eL_3;
      forall(1..(length(tmp3)),np,
        tmp=tmp3_np;
        tmp1=Getlevel(tmp);
        tmp1=select(tmp1,#_2==0);
        tmp1=apply(tmp1,#_1);
        nc=length(tmp1)+1;
        forall(tmp1,
          tmp_#="&";
        );
        tmp3_np=tmp;
      );
      tmp2="\begin{array}{";
      forall(1..nc,tmp2=tmp2+"c");
      tmp2=tmp2+"}";
      forall(tmp3,tmp2=tmp2+#+"\\");
      tmp2=substring(tmp2,0,length(tmp2)-2);
      tmp2=tmp2+"\end{array}";
      if(sym=="mat(",
        tmp2="\left("+tmp2+"\right)";
      );
      if(sym=="det(",
        tmp2="\left|"+tmp2+"\right|";
      );
      if(sym=="case(", //210902from
        tmp2="\left\{"+tmp2+"\right.";
      );

      out=out+tmp2+rest;
      tmp=indexof(out,sym);
      ctr=ctr+1;      
    );
  );
  out;
);

Replacedot(str):=(  //220819
  regional(out,rest,tmp,tmp1,tmp2);
  out=str;
  tmp1=indexof(out,"dot(");
  while(tmp1>0,
    tmp=Indexall(out,")");
    tmp=select(tmp,#>tmp1);
    if(length(tmp)>0,
      tmp2=tmp_1;
    ,
      tmp2=length(out);
    );
    rest=substring(out,tmp2,length(out));
    tmp=substring(out,tmp1+3,tmp2-1);
    tmp=Removespace(tmp);
    out=substring(out,0,tmp1-1);
    if((tmp=="")%(tmp=="1"),tmp2="{\cdot}");
    if((tmp=="3")%(tmp=="s"),tmp2="{\cdots}");
    if(tmp=="d",tmp2="{\ddots}");
    if(tmp=="l",tmp2="{\ldots}");
    if(tmp=="v",tmp2="{\vdots}");
    out=out+tmp2+rest;
    tmp1=indexof(out,"dot(");
  );
  out;
);

Replacefun(str,name,repL):=(  //new 210604
  regional(out,sub,rest,pre,post,comL,ctr,lev,nn,
     tmp,tmp1,tmp2);
  out="";
  pre=""; post=str; sub="";
  tmp=indexof(post,name);
  ctr=1;
  while((tmp>0)&(ctr<50),
    pre=substring(post,0,tmp-1);
    sub=substring(post,tmp+length(name)-2,length(post));
    tmp1=Bracket(sub,"()");
    tmp1=select(tmp1,#_2==-1);
    tmp1=tmp1_1_1;
    post=substring(sub,tmp1,length(sub));
    sub=substring(sub,0,tmp1);
    tmp1=Bracket(sub,"()");
    tmp2=Getlevel(sub,",");
    if(length(tmp2)==0,
      if(name=="int(",
        pre=pre+"\displaystyle\int\,";
      );
    ,
      tmp2=select(tmp2,#_2==1);
      tmp2=apply(tmp2,#_1);
      tmp2=prepend(1,tmp2);
      tmp2=append(tmp2,length(sub));
      if(length(tmp2)==length(repL),
        forall(1..(length(tmp2)-1),
          tmp=substring(sub,tmp2_#,tmp2_(#+1)-1);
          if(!contains(["e^("],name),
            if(indexof(tmp,"-")+indexof(tmp,"+")>0,tmp="("+tmp+")");
          );
          pre=pre+repL_#+tmp;
//        if(#<length(tmp2)-1,pre=pre+","); //210617removed
        );
        pre=pre+repL_(length(tmp2));
      );
    );
    out=out+pre;
    tmp=indexof(post,name);
    ctr=ctr+1;
  );
  out=out+post;
  out;
);

Morefunction(str):=( //new 210604
  regional(out,name,repL);
  out=str;
//  out=Replacefun(out,"tfr(",["\tfrac{","}{","}"]); //210831
//  out=Replacefun(out,"lim(",["\displaystyle\lim_{","\to\,","}"]); //210617from
//  out=Replacefun(out,"int(",["\displaystyle\int_{","}^{","}"]);
//  out=Replacefun(out,"sum(",["\displaystyle\sum_{","}^{","}"]); //210617to
//  out=Replacefun(out,"e^(",["\exp{","}"]); //210612
  out=Replacematdet(out); //210606
  out=Replacedot(out); //220819
  out;
);

Noascii(str):=(
  regional(ascii,out,tmp,tmp1);
  ascii=apply(32..126,unicode(text(#),base->10));
  out="";
  forall(1..(length(str)),
    tmp=Op(#,str);
    if(!contains(ascii,tmp),
      out=out+tmp;
    );
  );
  out;
);

Addat(str):=(
  regional(ascii,out,flg,tmp);
  ascii=apply(32..126,unicode(text(#),base->10));
  ascii=remove(ascii,["@"]);
  out="";
  flg=0;
  forall(1..(length(str)),
    tmp=str_#;
    if(tmp=="@",
      flg=1-flg
    ,
      if(!contains(ascii,tmp),
        if(flg==0,
          tmp="@"+tmp+"@";
        );
      );
    );
    out=out+tmp;
  );
  out=replace(out,"@@","");
  out;
);

Sepchar(strorg):=(
  regional(str,out,flg,sharp,tctr,err,tmp,tmp1,tmp2);
  tmp1=strorg; //210907from
  str="";
  tctr=0;
  sharp=[];
  tmp=indexof(tmp1,"tx(");
  while(tmp>0,
    tctr=tctr+1;
    tmp2=substring(tmp1,0,tmp+1);
    tmp1=substring(tmp1,tmp+1,length(tmp1));
    str=str+tmp2+"(#"+text(tctr)+")";
    tmp=indexof(tmp1,")");
    tmp2=substring(tmp1,1,tmp-1);
    sharp=append(sharp,tmp2);
    tmp1=substring(tmp1,tmp,length(tmp1));
    tmp=indexof(tmp1,"tx(");
  );
  str=str+tmp1; //210907to
  str=Addat(str); 
  err="";
  out=[];
  tmp1=Indexall(str,"@");
  tmp=length(tmp1);
  if((length(str)==0)%(tmp==0)%(mod(tmp,2)==1),
    if((length(str)==0)%(tmp==0),
      if(length(str)==0,out=[],out=[str]);
    ,
      err="@の数";
    );
  ,
    tmp=tmp1_1;
    if(tmp>1,
      out=[substring(str,0,tmp-1)];
    );
    start=tmp;
    flg=1;
    forall(2..(length(tmp1)),
      if(flg==1,
        tmp2=substring(str,start-1,tmp1_#-1);
      ,
        tmp2=substring(str,start,tmp1_#-1);
      );
      out=append(out,tmp2);
      start=tmp1_#;
      flg=1-flg;
    );
    if(start<length(str),
      tmp2=substring(str,start,length(str));
      out=append(out,tmp2);
    );
  );
  forall(1..(length(sharp)),tmp,  //210907from
    out=apply(out,replace(#,"#"+tmp,sharp_tmp));
  ); //210907to
  [out,err];
);

Gettexform(str):=(
  regional(err,subL,strt,tmp,tmp1,tmp2,tmp3,tmp4);
  err="";
  tmp=Sepchar(str);
  subL=tmp_1;
  err=tmp_2;
  strt="";
  forall(subL,
    if(substring(#,0,1)=="@",
      strt=strt+substring(#,1,length(#));
    ,
      tmp=#;
      tmp=replace(#," ","(sp)");
      tmp=Modifyfortex(tmp);
      tmp=Morefunction(tmp);
      tmp1=Totexform(tmp);
//      tmp=Addasterisk(tmp);
//      tmp=replace(tmp,"\exp(","e^(");
//      tmp1=Totexform(tmp);
      tmp1=replace(tmp1,"a r r a y","array"); //210606[2lines]
      repeat(5,tmp1=replace(tmp1,"c c","cc"));
      tmp1=replace(tmp1,"c i r c","\circ");
//      tmp1=replace(tmp1,"\frac","\dfrac"); //220523(//)
      tmp1=Greekletter(tmp1); //210514[3lines]
      tmp1=Capitalletter(tmp1);
      tmp1=Boldletter(tmp1);
      strt=strt+"$"+tmp1+"$";
    );
  );
  strt;
);

Addfunstr(name,npos,strnow):=(
  regional(str,tmp,out);
  str=Instr(name);
  tmp="";
  tmp=substring(strnow,0,npos)+str;
  tmp=tmp+substring(strnow,npos,length(strnow));
  out=[tmp,npos+length(str)];
  funflg=0;
  out;
);


//   220814  Delete
//   220720  key width
//   220718  lic,cpr
//   220412
//   211112
//   211020
//   210923
//   210619
//   210910

Shift=0;
keytype=1;
capflg=0;
greflg=0;
boldflg=0;
vecflg=0;

nch=2;
ch=2;
StrL=apply(1..nch,"");
StrpL=apply(1..nch,"");
startflg=1;
initflg=1;
DrwL=[];
dpos=[10,14];

Str="";
Strp="";
Strnq="";
Strnow="";
Strt="";
npos=0;


//nt=4;
px=15;
dtpy=3.2;
tposL=apply(1..4,[px+0.5,17.4-(#-1)*dtpy]);
posyL=[23,-2.5,-34];

//Setwindow([-20,65],[-17,15]);

//nameL=Keyname();
//Keytable(0,dxL,4,32.5,poskey,[1,1,0],nameL,[0,-0.5],22);

//Keytable(5,43,1,34.5,[46,3.4],0.9*[1,1,1],[],[0,-0.5],20);
//actL1=["BS","CL","AC","PS","PL"];
//forall(1..5,drawtext([47+(#-1)*4.3,4.2],actL1_#,size->20));
//Keytable(2,27,1,30,[46,0],0.9*[1,1,1]);
//actL2=["$<\!<$","$<$"];
//forall(1..2,drawtext([46.1+(#-1)*3,1],actL2_#,size->20));
//Keytable(2,27,1,30,[62,0],0.9*[1,1,1],[],[0,-0.5],20);
//actL3=["$>$","$>\!>$"];
//forall(1..2,drawtext([62.5+(#-1)*2.5,1],actL3_#,size->20));

poskey=[19.5,-17.67];
dxL=apply(10..19,42);
//dxL_4=42; dxL_5=42;
dxL2=apply(1..9,42);
dxL3=[42,42];

Adddrw(str):=(
  DrwL=append(DrwL,[dpos,str,18]);
  dpos=dpos-[0,2];
);

 // no ketjs on 
Seteditable(1,["","Size=24","Width=535"]);
Seteditable(2,["","Size=24","Width=535"]);
Seteditable(3,["","Size=24","Width=535"]);
//Seteditable(10,["","Size=18","Width=50"])
//Seteditable(32,["","Size=18","Width=80"]);
Text1.xy=[px+1,posyL_1-1];
Text2.xy=[px+1,posyL_2-1];
Text3.xy=[px+1,posyL_3-1];
inspect(T1,"ptsize",6);
inspect(T2,"ptsize",6);
inspect(T3,"ptsize",6);
inspect(T4,"ptsize",6);
// no ketjs off

ctrkey=[["BS","CL","$<\!<$","$<$","$>$","$>\!>$",
   "AC","PS","PL"]];

Keyname():=(
  regional(nL,nL2,nL3,tmp1);
  nL=[
    ["a","b","c","sin","sq",")","7","8","9","＋"],
    ["x","y","z","cos","fr",",","4","5","6","ー"],
    ["r","s","t","tan","tfr","(","1","2","3","＊","'"],
    ["w","_","=","log","ln","^","0",".","sp","／"]
  ];
  nL2=[
    ["°","＠","[","]","|","d","e","f","g"],
    ["$\times$","!","{","}","$\neq$","h","i","j","k"],
    ["dot",":",";","$\leq$","$\geq","l","m","n","o"],
    ["\","$\pm$","$\mp$","<",">","p","q","u","v"]
  ];
  nL3=[
    ["lim","pi"],
    ["int","$\infty$"],
    ["'","cs"],
    ["sum","tx"]
  ];

  if(Shift==1,
    nL3_3_2="$d$"; nL3_4_1="$[.]_{}^{}$"; nL3_4_2="$\partial$"; //210923
  );
  if(Shift==2,
    nL3_1_1="mat"; nL3_2_1="det"; nL3_4_2="$\circ$"; //210923
  );
  if(keytype==2,
    tmp1=["A","B","C"]; forall(1..3,nL_1_(#)=tmp1_#);
    tmp1=["D","E","F","G"]; forall(1..4,nL2_1_(#+5)=tmp1_#);
    tmp1=["X","Y","Z"]; forall(1..3,nL_2_(#)=tmp1_#);
    tmp1=["H","I","J","K"]; forall(1..4,nL2_2_(#+5)=tmp1_#);
    tmp1=["R","S","T"]; forall(1..3,nL_3_(#)=tmp1_#);
    tmp1=["L","M","N","O"]; forall(1..4,nL2_3_(#+5)=tmp1_#);
    tmp1=["W"]; forall(1..1,nL_4_(#)=tmp1_#);
    tmp1=["P","Q","U","V"]; forall(1..4,nL2_4_(#+5)=tmp1_#);
  );
  if(keytype==3,
    tmp1=["$\alpha$","$\beta$","$\gamma$"];
    forall(1..3,nL_1_(#)=tmp1_#);
    tmp1=["$\Delta$","$\delta$","$\varepsilon$","$\varphi$"];
    forall(1..4,nL2_1_(#+5)=tmp1_#);
    tmp1=["$\kappa$","$\iota$","$\zeta$"];
    forall(1..3,nL_2_(#)=tmp1_#);
    tmp1=["$\Theta$","$\theta$","$\chi$","$\xi$"];
    forall(1..4,nL2_2_(#+5)=tmp1_#);
    tmp1=["$\rho$","$\sigma$","$\tau$"];
    forall(1..3,nL_3_(#)=tmp1_#);
    tmp1=["$\lambda","$\mu$","$\nu$","$\omega$"];
    forall(1..4,nL2_3_(#+5)=tmp1_#);
    tmp1=["$\Omega$"];
    forall(1..1,nL_4_(#)=tmp1_#);
    tmp1=["$\Psi$","$\psi$","$\Phi$","$\Lambda$"];
    forall(1..4,nL2_4_(#+5)=tmp1_#);
  );
  if(keytype==4,
    tmp1=apply(["a","b","c"],"$\mathbf{"+#+"}$");
    forall(1..3,nL_1_(#)=tmp1_#);
    tmp1=apply(["d","e","f","g"],"$\mathbf{"+#+"}$");
    forall(1..4,nL2_1_(#+5)=tmp1_(#));
    tmp1=apply(["x","y","z"],"$\mathbf{"+#+"}$");
    forall(1..3,nL_2_(#)=tmp1_#);
    tmp1=apply(["h","i","j","k"],"$\mathbf{"+#+"}$");
    forall(1..4,nL2_2_(#+5)=tmp1_#);
    tmp1=apply(["r","s","t"],"$\mathbf{"+#+"}$");
    forall(1..3,nL_3_(#)=tmp1_#);
    tmp1=apply(["l","m","n","o"],"$\mathbf{"+#+"}$");
    forall(1..4,nL2_3_(#+5)=tmp1_#);
    tmp1=apply(["w"],"$\mathbf{"+#+"}$");
    forall(1..1,nL_4_(#)=tmp1_#);
    tmp1=apply(["p","q","r","s"],"$\mathbf{"+#+"}$");
    forall(1..4,nL2_4_(#+5)=tmp1_#);
  );
  if(keytype==5,
    tmp1=apply(["a","b","c"],"$\vec{"+#+"}$");
    forall(1..3,nL_1_(#)=tmp1_#);
    tmp1=apply(["d","e","f","g"],"$\vec{"+#+"}$");
    forall(1..4,nL2_1_(#+5)=tmp1_(#));
    tmp1=apply(["x","y","z"],"$\vec{"+#+"}$");
    forall(1..3,nL_2_(#)=tmp1_#);
    tmp1=apply(["h","i","j","k"],"$\vec{"+#+"}$");
    forall(1..4,nL2_2_(#+5)=tmp1_#);
    tmp1=apply(["r","s","t"],"$\vec{"+#+"}$");
    forall(1..3,nL_3_(#)=tmp1_#);
    tmp1=apply(["l","m","n","o"],"$\vec{"+#+"}$");
    forall(1..4,nL2_3_(#+5)=tmp1_#);
    tmp1=apply(["w"],"$\vec{"+#+"}$");
    forall(1..1,nL_4_(#)=tmp1_#);
    tmp1=apply(["p","q","r","s"],"$\vec{"+#+"}$");
    forall(1..4,nL2_4_(#+5)=tmp1_#);
  );  [nL,nL2,nL3];
);



///////
Manifun=["Allclear()","Clearnow()","Delete()","Push()","Pull()",
  "Left()","Right()","LLeft()","RRight()"];

Allclear():=(
  Str="";
  Strnq="";
  StrL_ch="";
  StrpL_ch="";
  npos=0;
  Subsedit(ch,"");
  funflg=0;
);

Clearnow():=(
  StrL_ch="";
  npos=0;
  Subsedit(ch,"");
  funflg=0;
);

Delete():=( //220814dbg
  regional(tmp,tmp1,tmp2);
  tmp=indexof(Str,"?");
  if(tmp>0,npos=tmp,npos=length(Str));
  if(ch<=2,
    if(length(Str)>0,
      if(npos==length(Str),
        Str=substring(Str,0,npos-1);
      ,
        tmp1=substring(Str,0,npos-2);
        tmp2=substring(Str,npos-1,length(Str));
        Str=tmp1+tmp2;
      );
      Strnq=replace(Str,"?","");
      Strnow=Str;
      StrL_ch=Strnq;
      npos=npos-1;
    ,
      Pull();
      npos=length(StrL_ch);
      Delete();
    );
  );
);

Push():=(
  regional(tmp,tmp1);
  tmp1=StrL_ch;
  tmp=indexof(tmp1,"//");
  if(tmp==0,
    StrpL_ch=StrpL_ch+tmp1+"//";
    Str="";
    npos=0;
  ,
    StrpL_ch=StrpL_ch+substring(tmp1,0,tmp+1);
    Str=substring(tmp1,tmp+1,length(tmp1));
    npos=max([0,npos-(tmp+1)]);
  );
  StrL_ch=Str;
  Strnq=Str;
  Subsedit(ch,Str);
);

Pull():=(
  regional(tmp,tmp1,tmp2);
  tmp1=StrpL_ch;
  tmp=indexall(tmp1,"//");
  if(length(tmp)>1,tmp=tmp_(-2)+1,tmp=0);
  tmp2=substring(tmp1,0,tmp);
  StrpL_ch=tmp2;
  tmp1=substring(tmp1,tmp,length(tmp1));
  Str=tmp1+StrL_ch;
  Strnq=Str;
  StrL_ch=Str;
  npos=length(tmp1)+npos;
  Subsedit(ch,Str);
);

Left():=(
  regional(tmp,tmp1,tmp2,tmp3);
  //global Str,npos
  if(length(Str)>0,
    tmp=indexof(Str,"?");
    if(tmp>1,
      tmp1=substring(Str,0,tmp-2)+"?";
      tmp2=substring(Str,tmp-2,tmp-1);
      tmp3=substring(Str,tmp,length(Str));
      Str=tmp1+tmp2+tmp3;
      npos=length(tmp1+"?");
    );
    if(tmp==0,
      tmp1=substring(Str,0,length(Str)-1)+"?";
      tmp3=substring(Str,length(Str)-1,length(Str));
      Str=tmp1+tmp3;  
      npos=length(tmp1);
    );
  );
);

Right():=(
  regional(tmp,tmp1,tmp2,tmp3);
  //global Str,npos
  if(length(Str)>0,
    tmp=indexof(Str,"?");
    if(tmp>0,
      if(tmp<length(Str)-1,
        tmp1=substring(Str,0,tmp-1);
        tmp2=substring(Str,tmp,tmp+1)+"?";
        tmp3=substring(Str,tmp+1,length(Str));
        Str=tmp1+tmp2+tmp3;
        npos=length(tmp1+"?");
      );
      if(tmp==length(Str)-1,
        tmp1=substring(Str,0,tmp-1);
        tmp3=substring(Str,tmp,length(Str));
        Str=tmp1+tmp3;
        npos=length(Str);
      );
    );
  );
);

LLeft():=(
  regional(tmp,tmp1,tmp2,tmp3);
  //global Str,npos
  if(length(Str)>0,
    npos=1;
    Str="?"+Str;
  );
);

RRight():=(
  regional(tmp,tmp1,tmp2,tmp3);
  //global Str,npos
  if(length(Str)>0,
    Str=replace(Str,"?","");
    npos=length(Str);
  );
);
